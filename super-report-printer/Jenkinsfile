import groovy.transform.Field

// We need this because of the mono repo :(
@Field String PROJECT_DIR = 'super-report-printer'

pipeline {
    // We should really use some specific agent, we are getting crashes on some agents without Node or Docker!
    agent {
        kubernetes {
            inheritFrom 'Node16Alpine Kaniko'
            yamlMergeStrategy merge()
            defaultContainer 'node16'
            yaml '''
            spec:
              containers:
                - name: node
                  image: node:16.15-alpine3.16
                  command: ["sleep", "infinity"]
                  resources:
                    requests:
                      cpu: 100m
                      memory: 128Mi
                    limits:
                      cpu: 1
                      memory: 128Mi
                - name: python
                  image: python:3.10-alpine3.16
                  command: ["sleep", "infinity"]
                  resources:
                    requests:
                      cpu: 10m
                      memory: 16Mi
                    limits:
                      cpu: 1
                      memory: 16Mi
            '''
        }
    }

    options {
        buildDiscarder logRotator(numToKeepStr: '10')
        disableConcurrentBuilds()
        timeout(time: 10, unit: 'MINUTES')
        ansiColor('xterm')
    }

    stages {
        stage('Generate Report') {
            steps {
                dir(PROJECT_DIR) {
                    container('python') {
                        sh './report_generator.py'
                    }
                }
            }
        }

        stage('Install dependencies') {
            steps {
                dir(PROJECT_DIR) {
                    sh 'npm ci'
                }
            }
        }

        stage('Build Typescript') {
            steps {
                dir(PROJECT_DIR) {
                    sh 'npm run build'
                }
            }
        }

        stage('Build Image') {
            steps {
                dir(PROJECT_DIR) {
                    container('kaniko'){
                        sh """ /kaniko/executor --context=. \\
                          --dockerfile=./Dockerfile \\
                          ${getDestination()} \\
                          --use-new-run --snapshotMode=redo \\
                          --no-push
                        """
                    }
                }
            }
        }
    }
}

def getDestination() {
  
  def destinationCommand = "--destination=super-report-printer"
  def destination = "${destinationCommand}:${env.GIT_COMMIT}"

  if (env.GIT_BRANCH == 'master') {
    destination += " ${destinationCommand}:latest"
  }
  return destination
}